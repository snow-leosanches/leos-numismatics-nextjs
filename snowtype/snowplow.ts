import { trackSelfDescribingEvent, CommonEventProperties, SelfDescribingJson } from '@snowplow/browser-tracker';
import * as Ecom from '@snowplow/browser-plugin-snowplow-ecommerce';
// Automatically generated by Snowtype

type Promotion = any;

type Product = any;

type Cart = any;

type Refund = any;

type Transaction = any;

type TransactionError = any;

type CheckoutStep = any;

/**
 * Structure for events that identify a user, with their user pieces
 */
export type CustomerIdentification = {
    /**
     * Customer's email address
     */
    email?: null | string;
    /**
     * The customer's phone
     */
    phone?: null | string;
}

/**
 * Event structure for a User Update Profile operation.
 */
export type UpdateUserProfile = {
    /**
     * The User ID
     */
    user_id: string;
}

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionInternalPromotionView = {
    type: SnowplowEcommerceActionInternalPromotionViewType;
    [property: string]: any;
}

export type SnowplowEcommerceActionInternalPromotionViewType = "promo_view";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionProductListView = {
    name?: null | string;
    type:  SnowplowEcommerceActionProductListViewType;
    [property: string]: any;
}

export type SnowplowEcommerceActionProductListViewType = "list_view";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionAddToCart = {
    type: SnowplowEcommerceActionAddToCartType;
    [property: string]: any;
}

export type SnowplowEcommerceActionAddToCartType = "add_to_cart";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionInternalPromotionClick = {
    type: SnowplowEcommerceActionInternalPromotionClickType;
    [property: string]: any;
}

export type SnowplowEcommerceActionInternalPromotionClickType = "promo_click";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionRemoveFromCart = {
    type: SnowplowEcommerceActionRemoveFromCartType;
    [property: string]: any;
}

export type SnowplowEcommerceActionRemoveFromCartType = "remove_from_cart";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionRefund = {
    type: SnowplowEcommerceActionRefundType;
    [property: string]: any;
}

export type SnowplowEcommerceActionRefundType = "refund";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionTransaction = {
    type: SnowplowEcommerceActionTransactionType;
    [property: string]: any;
}

export type SnowplowEcommerceActionTransactionType = "transaction";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionTransactionError = {
    type: SnowplowEcommerceActionTransactionErrorType;
    [property: string]: any;
}

export type SnowplowEcommerceActionTransactionErrorType = "trns_error";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionCheckoutStep = {
    type: SnowplowEcommerceActionCheckoutStepType;
    [property: string]: any;
}

export type SnowplowEcommerceActionCheckoutStepType = "checkout_step";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionProductListClick = {
    name?: null | string;
    type:  SnowplowEcommerceActionProductListClickType;
    [property: string]: any;
}

export type SnowplowEcommerceActionProductListClickType = "list_click";

/**
 * Generated from a property rule
 */
export type SnowplowEcommerceActionTrackProductView = {
    type: SnowplowEcommerceActionTrackProductViewType;
    [property: string]: any;
}

export type SnowplowEcommerceActionTrackProductViewType = "product_view";

/**
 * Creates a Snowplow Event Specification entity.
 */
export function createEventSpecification(eventSpecification: EventSpecification){
    return {
        schema:
            'iglu:com.snowplowanalytics.snowplow/event_specification/jsonschema/1-0-3',
        data: eventSpecification,
    }
}

/**
 * Automatically attached context for event specifications
 */
interface EventSpecification {
    id: string;
    name: string;
    data_product_id: string;
    data_product_name: string;
    data_product_domain: string;
}

type ContextsOrTimestamp<T = any> = Omit<CommonEventProperties<T>, 'context'> & { context?: SelfDescribingJson<T>[] | null | undefined }
/**
 * Track a Snowplow event for CustomerIdentification.
 * Structure for events that identify a user, with their user pieces
 */
export function trackCustomerIdentification<T extends {} = any>(customerIdentification: CustomerIdentification & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = customerIdentification;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.leosnumismatics/customer_identification/jsonschema/1-0-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow CustomerIdentification entity.
 */
export function createCustomerIdentification(customerIdentification: CustomerIdentification){
    return {
        schema: 'iglu:com.leosnumismatics/customer_identification/jsonschema/1-0-0',
        data: customerIdentification
    }
}
/**
 * Track a Snowplow event for UpdateUserProfile.
 * Event structure for a User Update Profile operation.
 */
export function trackUpdateUserProfile<T extends {} = any>(updateUserProfile: UpdateUserProfile & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = updateUserProfile;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.homestory/update_user_profile/jsonschema/1-0-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow UpdateUserProfile entity.
 */
export function createUpdateUserProfile(updateUserProfile: UpdateUserProfile){
    return {
        schema: 'iglu:com.homestory/update_user_profile/jsonschema/1-0-0',
        data: updateUserProfile
    }
}
/**
 * Track a Snowplow event for SnowplowEcommerceActionInternalPromotionView.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionInternalPromotionView<T extends {} = any>(snowplowEcommerceActionInternalPromotionView: SnowplowEcommerceActionInternalPromotionView & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionInternalPromotionView;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionProductListView.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionProductListView<T extends {} = any>(snowplowEcommerceActionProductListView: SnowplowEcommerceActionProductListView & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionProductListView;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionAddToCart.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionAddToCart<T extends {} = any>(snowplowEcommerceActionAddToCart: SnowplowEcommerceActionAddToCart & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionAddToCart;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionInternalPromotionClick.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionInternalPromotionClick<T extends {} = any>(snowplowEcommerceActionInternalPromotionClick: SnowplowEcommerceActionInternalPromotionClick & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionInternalPromotionClick;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionRemoveFromCart.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionRemoveFromCart<T extends {} = any>(snowplowEcommerceActionRemoveFromCart: SnowplowEcommerceActionRemoveFromCart & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionRemoveFromCart;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionRefund.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionRefund<T extends {} = any>(snowplowEcommerceActionRefund: SnowplowEcommerceActionRefund & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionRefund;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionTransaction.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionTransaction<T extends {} = any>(snowplowEcommerceActionTransaction: SnowplowEcommerceActionTransaction & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionTransaction;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionTransactionError.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionTransactionError<T extends {} = any>(snowplowEcommerceActionTransactionError: SnowplowEcommerceActionTransactionError & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionTransactionError;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionCheckoutStep.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionCheckoutStep<T extends {} = any>(snowplowEcommerceActionCheckoutStep: SnowplowEcommerceActionCheckoutStep & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionCheckoutStep;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionProductListClick.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionProductListClick<T extends {} = any>(snowplowEcommerceActionProductListClick: SnowplowEcommerceActionProductListClick & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionProductListClick;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Track a Snowplow event for SnowplowEcommerceActionTrackProductView.
 * Generated from a property rule
 */
function trackSnowplowEcommerceActionTrackProductView<T extends {} = any>(snowplowEcommerceActionTrackProductView: SnowplowEcommerceActionTrackProductView & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = snowplowEcommerceActionTrackProductView;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplowanalytics.snowplow.ecommerce/snowplow_ecommerce_action/jsonschema/1-0-2',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}


/**
 * Tracks a CustomerIdentification event specification.
 * ID: 75178748-ae15-4828-b9f4-b49ee638a841
 */
export function trackCustomerIdentificationSpec(customerIdentification: CustomerIdentification & ContextsOrTimestamp, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '75178748-ae15-4828-b9f4-b49ee638a841',
        name: 'Customer Identification',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(customerIdentification.context)
        ? [...customerIdentification.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedCustomerIdentification = {
        ...customerIdentification,
        context,
    };

    trackCustomerIdentification<Record<string, unknown> | EventSpecification>(modifiedCustomerIdentification, trackers);
}
/**
 * Tracks a UpdateProfile event specification.
 * ID: fbe39734-dbab-4170-8722-878fd0973c29
 */
export function trackUpdateProfileSpec(updateProfile: UpdateUserProfile & ContextsOrTimestamp, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'fbe39734-dbab-4170-8722-878fd0973c29',
        name: 'Update Profile',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(updateProfile.context)
        ? [...updateProfile.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedUpdateProfile = {
        ...updateProfile,
        context,
    };

    trackUpdateUserProfile<Record<string, unknown> | EventSpecification>(modifiedUpdateProfile, trackers);
}

/**
 * Tracks a InternalPromotionView event specification.
 * ID: 2713682c-0405-4caf-85c6-ea6d9ae23b75
 */
export function trackInternalPromotionViewSpec(internalPromotionView: Ecom.SPPromotion & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '2713682c-0405-4caf-85c6-ea6d9ae23b75',
        name: 'Internal promotion view',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(internalPromotionView.context)
        ? [...internalPromotionView.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedInternalPromotionView = {
        ...internalPromotionView,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackPromotionView(modifiedInternalPromotionView, trackers);
}
/**
 * Tracks a ProductListView event specification.
 * ID: 33afb089-2070-4e43-a261-53066b9cea43
 */
export function trackProductListViewSpec(productListView: Ecom.ListViewEvent & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '33afb089-2070-4e43-a261-53066b9cea43',
        name: 'Product list view',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(productListView.context)
        ? [...productListView.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedProductListView = {
        ...productListView,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackProductListView(modifiedProductListView, trackers);
}
/**
 * Tracks a AddToCart event specification.
 * ID: 3eb11c24-27fb-4b13-94e2-aa3c4d242e9c
 */
export function trackAddToCartSpec(addToCart: Ecom.Cart & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '3eb11c24-27fb-4b13-94e2-aa3c4d242e9c',
        name: 'Add to cart',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(addToCart.context)
        ? [...addToCart.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedAddToCart = {
        ...addToCart,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackAddToCart(modifiedAddToCart, trackers);
}
/**
 * Tracks a InternalPromotionClick event specification.
 * ID: 538d7168-b6ea-46ab-b529-24035974d6d2
 */
export function trackInternalPromotionClickSpec(internalPromotionClick: Ecom.SPPromotion & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '538d7168-b6ea-46ab-b529-24035974d6d2',
        name: 'Internal promotion click',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(internalPromotionClick.context)
        ? [...internalPromotionClick.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedInternalPromotionClick = {
        ...internalPromotionClick,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackPromotionClick(modifiedInternalPromotionClick, trackers);
}
/**
 * Tracks a RemoveFromCart event specification.
 * ID: aef9adcb-660a-4d20-86ba-7ba040600a4d
 */
export function trackRemoveFromCartSpec(removeFromCart: Ecom.Cart & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'aef9adcb-660a-4d20-86ba-7ba040600a4d',
        name: 'Remove from cart',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(removeFromCart.context)
        ? [...removeFromCart.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedRemoveFromCart = {
        ...removeFromCart,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackRemoveFromCart(modifiedRemoveFromCart, trackers);
}
/**
 * Tracks a Refund event specification.
 * ID: b5b53547-0128-436c-b0ce-87b623008b6a
 */
export function trackRefundSpec(refund: Ecom.Refund & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'b5b53547-0128-436c-b0ce-87b623008b6a',
        name: 'Refund',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(refund.context)
        ? [...refund.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedRefund = {
        ...refund,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackRefund(modifiedRefund, trackers);
}
/**
 * Tracks a Transaction event specification.
 * ID: ba719d07-7f68-4090-8c18-b75f0dd848e8
 */
export function trackTransactionSpec(transaction: Ecom.SPTransaction & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'ba719d07-7f68-4090-8c18-b75f0dd848e8',
        name: 'Transaction',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(transaction.context)
        ? [...transaction.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedTransaction = {
        ...transaction,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackTransaction(modifiedTransaction, trackers);
}
/**
 * Tracks a TransactionError event specification.
 * ID: bc9ec5cd-f1e5-4f4e-a67f-3edd41da84a0
 */
export function trackTransactionErrorSpec(transactionError: Ecom.TransactionError & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'bc9ec5cd-f1e5-4f4e-a67f-3edd41da84a0',
        name: 'Transaction Error',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(transactionError.context)
        ? [...transactionError.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedTransactionError = {
        ...transactionError,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackTransactionError(modifiedTransactionError, trackers);
}
/**
 * Tracks a CheckoutStep event specification.
 * ID: d1a0e8ce-2130-495f-b8db-1d950c23f9b5
 */
export function trackCheckoutStepSpec(checkoutStep: Ecom.CheckoutStep & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'd1a0e8ce-2130-495f-b8db-1d950c23f9b5',
        name: 'Checkout step',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(checkoutStep.context)
        ? [...checkoutStep.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedCheckoutStep = {
        ...checkoutStep,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackCheckoutStep(modifiedCheckoutStep, trackers);
}
/**
 * Tracks a ProductListClick event specification.
 * ID: d4010334-dd01-443f-a065-683b00ee0ac9
 */
export function trackProductListClickSpec(productListClick: Ecom.ListClickEvent & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'd4010334-dd01-443f-a065-683b00ee0ac9',
        name: 'Product list click',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(productListClick.context)
        ? [...productListClick.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedProductListClick = {
        ...productListClick,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackProductListClick(modifiedProductListClick, trackers);
}
/**
 * Tracks a TrackProductView event specification.
 * ID: e35e222f-93d9-49e0-9a02-9d39d813de70
 */
export function trackTrackProductViewSpec(trackProductView: Ecom.Product & Ecom.CommonEcommerceEventProperties, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: 'e35e222f-93d9-49e0-9a02-9d39d813de70',
        name: 'Track product view',
        data_product_id: '940ca3a3-6882-4567-b7b3-f57189bcc49d',
        data_product_name: 'Leo&#x27;s Numismatics Web',
        data_product_domain: 'E-commerce'
    });

    const context = Array.isArray(trackProductView.context)
        ? [...trackProductView.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedTrackProductView = {
        ...trackProductView,
        context: context as unknown as SelfDescribingJson<Record<string, unknown>>[],
    };

    Ecom.trackProductView(modifiedTrackProductView, trackers);
}

